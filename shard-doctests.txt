Doctests for the Shard Package
==============================

Core Modules and Imports
------------------------

First, make sure all core modules import fine:

    >>> import shard
    >>> import shard.assets
    >>> import shard.core
    >>> import shard.core.client
    >>> import shard.core.server
    >>> import shard.eventprocessor
    >>> import shard.interfaces
    >>> import shard.plugin
    >>> import shard.user
    >>> import shard.user.pygameui
    >>> import shard.run
    >>>

Server Execution
----------------

    >>> app = shard.run.App("d", test = True)
    >>> interface = shard.interfaces.Interface("dummy", app.logger)
    >>> app.run_server(60, interface)
    >>>

Client Execution
----------------

    >>> app = shard.run.App("d", test = True)
    >>> interface = shard.interfaces.Interface("dummy", app.logger)
    >>> app.run_client(60, interface, "player")
    >>>

Standalone Execution (Client and Server)
----------------------------------------

    >>> app = shard.run.App("d", test = True)
    >>> app.run_standalone(60, "player")
    >>>

Asset Manager
-------------

    >>> stream = open("temp.dat", mode="w")
    >>> stream.write("shard\n")
    6
    >>> stream.close()
    >>> app = shard.run.App("d", test = True)
    >>> assets = shard.assets.Assets(app.logger)
    >>> asset = assets.fetch("temp.dat")
    >>> asset.read()
    b'shard\n'
    >>> asset.close()
    >>> import os
    >>> os.remove("temp.dat")
    >>>

Client with PygameUserInterface
-------------------------------

    >>> app = shard.run.App("d", test = True)
    >>> app.user_interface_class = shard.user.pygameui.PygameUserInterface
    >>> interface = shard.interfaces.Interface("dummy", app.logger)
    >>> app.run_client(60, interface, "player")
    >>>

Tile Fetching and Display in PygameUserInterface
------------------------------------------------

>>> img = shard.user.pygameui.pygame.Surface((100, 100))
>>> img.fill((255, 0, 0))
<rect(0, 0, 100, 100)>
>>> shard.user.pygameui.pygame.image.save(img, "red.png")
>>> img.fill((0, 255, 0))
<rect(0, 0, 100, 100)>
>>> shard.user.pygameui.pygame.image.save(img, "green.png")
>>> class MapTest(shard.plugin.Plugin):
...     def process_message(self, message):
...         if len(message.event_list):
...             self.logger.debug("processing message {}".format(str(message.event_list)))
...             tile_red = shard.Tile(shard.FLOOR, "red.png")
...             tile_green = shard.Tile(shard.FLOOR, "green.png")
...             self.message_for_host.event_list.append(shard.EnterRoomEvent())
...             for x in range(0, 8, 2):
...                 for y in range(0, 5, 2):
...                     self.message_for_host.event_list.append(shard.ChangeMapElementEvent(tile_red, (x, y)))
...                     self.message_for_host.event_list.append(shard.ChangeMapElementEvent(tile_green, (x + 1, y)))
...                     self.message_for_host.event_list.append(shard.ChangeMapElementEvent(tile_green, (x, y + 1)))
...                     self.message_for_host.event_list.append(shard.ChangeMapElementEvent(tile_red, (x + 1, y + 1)))
...             self.message_for_host.event_list.append(shard.RoomCompleteEvent())
...             return self.message_for_host
...         else:
...             return shard.Message([])
...
>>> app = shard.run.App("d", test = True)
>>> app.user_interface_class = shard.user.pygameui.PygameUserInterface
>>> app.server_plugin_class = MapTest
>>> app.run_standalone(60, "player")
>>> os.remove("red.png")
>>> os.remove("green.png")
>>>
